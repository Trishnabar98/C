//Using Standard Method to check if a string is palindrome

#include <stdio.h>
#include <string.h>
int main(void) {
	// your code goes here
	char s1[20];
	int i,length;
	int flag=0;
	
	printf("Enter the string:\t");
	scanf("%s",&s1);
	
	length=strlen(s1);
	
	for(i=0;i<length;i++)
	{
	    if(s1[i]!=s1[length-i-1])
	    {
	        flag=1;
	        break;
	    }
	}
	if(flag)
	    printf("\n%s is not palindome\n",s1);
	else
	    printf("\n%s is  palindome\n",s1);
	return 0;
}

//Recursive function to check if a string is palindrome

#include <stdio.h>
#include <string.h>

int palirec(char str[],int s,int e)
{
	    if(s==e)
	        return 1;
	   if(str[s]!=str[e])
	        return 0;
	   if(s<e+1)
	   return palirec(str,s+1,e-1);
return 1; 
	     
}
int ispali(char str[])
{
	    int n=strlen(str);
	    
	    if(n==0)
	        return 1;
	   return palirec(str,0,n-1);     
	    
}
	
int main(void) {
	// your code goes here
	char s1[20];
	printf("Enter the string:\t");
	scanf("%s",&s1);
	
    if (ispali(s1)) 
    printf("Yes"); 
    else
    printf("No"); 
	
	return 0;
}

//#include <iostream>
#include<bits/stdc++.h>
using namespace std;

bool palin(char s[])
{
    int i;
    int n=strlen(s);
    for(i=0;i<n/2;i++)
    {
        if(s[i]!=s[n-1-i])
            return false;
    }
    return true;
}



int main() {
	// your code goes here
	char s[12];
	cin>>s;
	
	
    if(palin(s))
        cout<<"palindrom"<<endl;
	else
	    cout<<"not palindrom"<<endl;
	return 0;
}


