1.   QS:-Our hoary culture had several great persons 
Problem Statement
Our hoary culture had several great persons since time immemorial and king vikramaditya’s nava ratnas (nine gems) belongs to this ilk.They are named in the following shloka:


Among these, Varahamihira was an astrologer of eminence and his book Brihat Jataak is recokened as the ultimate authority in astrology.

He was once talking with Amarasimha,another gem among the nava ratnas and the author of Sanskrit thesaurus, Amarakosha.

Amarasimha wanted to know the final position of a person, who starts from the origin 0 0 and travels per following scheme.

TCS NQT Coding
Scheme
He first turns and travels 10 units of distance
His second turn is upward for 20 units
Third turn is to the left for 30 units
Fourth turn is the downward for 40 units
Fifth turn is to the right(again) for 50 units
… And thus he travels, every time increasing the travel distance by 10 units.

Test Cases
Case 1
Input : 3
Expected Output :-20 20
Case 2
Input: 4
Expected Output: -20 -20
Case 3
Input : 5
Expected Output : 30 -20
Case 4
Input : 7
Expected Output : 90 -20


code
=======
#include <stdio.h>
#include <stdlib.h>

int main()
{
    int n;
    scanf("%d", &n);
    
    char c = 'R';
    int x = 0, y = 0;
    int distance = 10;
    
    while(n)
    {
        switch(c)
        {
            case 'R':
            x = x + distance;
            c = 'U';
            distance = distance + 10;
            break;
            
            case 'U':
            y = y + distance;
            c = 'L';
            distance = distance + 10;
            break;
            
            case 'L':
            x = x - distance;
            c = 'D';
            distance = distance + 10;
            break;
            
            case 'D':
            y = y - distance;
            c = 'A';
            distance = distance + 10;
            break;            
            
            case 'A':
            x = x + distance;
            c = 'R';
            distance = distance + 10;
            break;
        }
        n--;
    }
    
    printf("%d %d",x,y);
    return 0;
}





2. QS:-Sweet Seventeen Problem Statement
Given a maximum of four digit to the base 17 (10 – A, 11 – B, 12 – C, 13 – D … 16 – G} as input, output its decimal value.

Test Cases
Case 1
Input – 1A
Expected Output – 27
Case 2
Input – 23GF
Expected Output – 10980

code
=====
#include <stdio.h>
#include <math.h>
#include<string.h>


int main(void) {
	char hex[17];
	long long dec,place;
	int i=0,len,val;
	
	scanf("%s",hex);
	len=strlen(hex);
	len--;
	
	for(i=0;hex[i]!='\0';i++)
	{
	    if(hex[i]>='0' && hex[i]<='9')
	    {
	        val=hex[i]-48;
	    }
	    else if(hex[i]>='a' && hex[i]<='z')
	    {
	        val=hex[i]-97+10;
	    }
	    else if(hex[i]>='A' && hex[i]<='Z')
	    {
	        val=hex[i]-65+10;
	    }
	    
	    dec=dec+val*pow(17,len);
	    len--;
	}
	
	printf("%ld",dec);
	return 0;
}

QS:-Oddly Even Problem Statement
Given a maximum of 100 digit numbers as input, find the difference between the sum of odd and even position digits

Test Cases
Case 1
Input: 4567
Expected Output: 2
Explanation : Odd positions are 4 and 6 as they are pos: 1 and pos: 3, both have sum 10. Similarly, 5 and 7 are at even positions pos: 2 and pos: 4 with sum 12. Thus, difference is 12 – 10 = 2

Case 2
Input: 5476
Expected Output: 2
Case 3
Input: 9834698765123
Expected Output: 1


code
=====
#include <stdio.h>
#include <math.h>
int main(void) {
    int i=0,even=0,odd=0;
    long long n;
    scanf("%ld",&n);
    while(n)
    {
        if(i%2==0)
        {
            even+=n%10;
            n/=10;
            i++;
        }
        else
        {
            odd+=n%10;
            n/=10;
            i++;   
        }
    }
    printf("%d",abs(odd-even));
	return 0;
}

Qs:-Problem Statement (Word is Key)
One programming language has the following keywords that cannot be used as identifiers:

break, case, continue, default, defer, else, for, func, goto, if, map, range, return, struct, type, var

Write a program to find if the given word is a keyword or not

Test cases
Case 1
Input – defer
Expected Output – defer is a keyword
Case 2
Input – While
Expected Output – while is not a keyword

code
======
#include <stdio.h>
#include <string.h>


int main(void) {
    
    char str[16][10]={"break", "case", "continue", "default", "defer", "else","for", 
    "func", "goto", "if", "map", "range", "return", "struct", "type", "var"};
    char input[20];
    
    int i=0,flag=0;
    scanf("%s",input);
    for(i=0;i<16;i++)
    {
        if(strcmp(input,str[i])==0)
        {
            flag=1;
            break;
        }
    }
    if(flag==1)
        printf("%s is a keyword",input);
    else
        printf("%s is not a keyword",input);

	return 0;
}



