#include <stdio.h>
#include<limits.h>

int maxSubArraySum(int a[], int size) 
{ 
	int max_so_far = INT_MIN, max_ending_here = 0; 

	for (int i = 0; i < size; i++) 
	{ 
		max_ending_here = max_ending_here + a[i]; 
		if (max_so_far < max_ending_here) 
			max_so_far = max_ending_here; 

		if (max_ending_here < 0) 
			max_ending_here = 0; 
	} 
	return max_so_far; 
} 

/*Driver program to test maxSubArraySum*/
int main() 
{ 
	/*int a[] = {-2, -3, 4, -1, -2, 1, 5, -3}; 
	int n = sizeof(a)/sizeof(a[0]); 
	int max_sum = maxSubArraySum(a, n); 
	cout << "Maximum contiguous sum is " << max_sum; */
	int i,a[30],n;
//	printf("Enter the size of the given array:\n");
	scanf("%d",&n);
//	printf("\nEnter the array elements:\n");
	for(i=0;i<n;i++)
	    scanf("%d",&a[i]);
	 for(i=0;i<n;i++)
	    printf("%d\t",a[i]);   
//	printf("\nArray before sort:\n");    
//	for(i=0;i<n;i++)
	  //  printf("%d\t",a[i]);
//	bubble_sort(a,n);
int max_sum = maxSubArraySum(a, n);
	//printf("\nArray after sort:\n"); 
	//for(i=0;i<n;i++)
	   printf("%d\t",max_sum);
	return 0; 
} 
