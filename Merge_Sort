#include <stdio.h>
void merging(int a[],int low,int mid,int high)
{
    int i,j,k;
    int n1=mid-low+1;
    int n2=high-mid;
    
    int L[n1],R[n2];
    
    for(i=0;i<n1;i++)
        L[i]=a[low+i];
    for(j=0;j<n2;j++)
        R[j]=a[mid+1+j];
    
    i=0,j=0,k=low;
    while(i<n1 && j<n2)
    {
        if(L[i]<=R[j])
        {
            a[k]=L[i];
            i++;
        }
        else
        {
            a[k]=R[j];
            j++;
        }
        k++;
    }
    while(i<n1)
    {
        a[k]=L[i];
        i++;
        k++;
    }
    while(j<n2)
    {
        a[k]=R[j];
        j++;
        k++;
    }
}
void merge_sort(int a[],int low,int high)
{
    if(low<high)
    {
        int mid=low+(high-low)/2;
        merge_sort(a,low,mid);
        merge_sort(a,mid+1,high);
        merging(a,low,mid,high);
    }
}
void printArray(int A[], int size) 
{ 
    int i; 
    for (i = 0; i < size; i++) 
        printf("%d ", A[i]); 
    printf("\n"); 
} 
  

int main() 
{ 
    int arr[] = { 8, 11, 0, 5, -1, 7 }; 
    int arr_size = sizeof(arr) / sizeof(arr[0]); 
  
    printf("Given array is \n"); 
    printArray(arr, arr_size); 
  
    merge_sort(arr, 0, arr_size - 1); 
  
    printf("\nSorted array is \n"); 
    printArray(arr, arr_size); 
    return 0; 
} 

